#!/bin/bash

SYSCONFIG='/etc/sysconfig/elasitcsearch'

if [[ -f $SYSCONFIG ]]
  then . $SYSCONFIG
fi

ES_HOME=/usr/share/elasticsearch
CONF_DIR=/etc/elasticsearch
DATA_DIR=/var/lib/elasticsearch
LOG_DIR=/var/log/elasticsearch
PID_DIR=/var/run/elasticsearch

WorkingDirectory=/usr/share/elasticsearch

ES_USER=elasticsearch
ES_GROUP=elasticsearch

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65535

# Specifies the maximum number of bytes of memory that may be locked into RAM
# Set to "infinity" if you use the 'bootstrap.mlockall: true' option
# in elasticsearch.yml and 'MAX_LOCKED_MEMORY=unlimited' in /etc/sysconfig/elasticsearch
#LimitMEMLOCK=infinity

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0

# SIGTERM signal is used to stop the Java process
KillSignal=SIGTERM

# Java process is never killed
SendSIGKILL=no

# When a JVM receives a SIGTERM signal it exits with code 143
SuccessExitStatus=143

if [[ ! -d $LOG_DIR ]]
  then mkdir -p $LOG_DIR
fi

chown -R ${User}.${Group} $LOG_DIR
chown -R ${User}.${Group} $DATA_DIR

if [[ -z $ELASTIC_CONFIG_NETWORK_HOST ]]
  then echo "ELASTIC_CONFIG_NETWORK_HOST not set.  Defaulting to 127.0.0.1."
  ELASTIC_CONFIG_NETWORK_HOST='127.0.0.1'
else
  echo "ELASTIC_CONFIG_NETWORK_HOST set to ${ELASTIC_CONFIG_NETWORK_HOST}"
fi


exec /usr/share/elasticsearch/bin/elasticsearch \
     -Des.pidfile=${PID_DIR}/elasticsearch.pid \
     -Des.default.path.home=${ES_HOME} \
     -Des.default.path.logs=${LOG_DIR} \
     -Des.default.path.data=${DATA_DIR} \
     -Des.default.path.conf=${CONF_DIR} \
     -Des.network.host=${ELASTIC_CONFIG_NETWORK_HOST} \
     -Des.insecure.allow.root=true # Because Docker

